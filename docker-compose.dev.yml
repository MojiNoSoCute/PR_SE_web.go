version: '3.8'

services:
  # Next.js Frontend (Development)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-dev
    restart: unless-stopped
    networks:
      - thai-university-dev

  # Golang API (Development)
  api-dev:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URL=postgres://postgres:password@postgres-dev:5432/thai_university?sslmode=disable
      - PORT=8080
      - GIN_MODE=debug
    volumes:
      - ./api:/app
    depends_on:
      - postgres-dev
    restart: unless-stopped
    networks:
      - thai-university-dev

  # PostgreSQL (Development)
  postgres-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=thai_university
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - thai-university-dev

volumes:
  postgres_dev_data:

networks:
  thai-university-dev:
    driver: bridge
